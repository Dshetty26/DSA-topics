package com.example.dsaMains.arrays;
import java.util.Arrays;
public class sortZerosOnesTows {
    public static void main(String [] args){
        int [] arr={0,1,1,1,0,1,2,1,2,0,0,0};
        System.out.println("Sorting Brute Force:"+Arrays.toString(BruteForce(arr)));
        int []arr2={0,1,1,1,0,1,2,1,2,0,0,0};
        System.out.println("Sorting Brute Force:"+Arrays.toString(BetterSolution(arr2)));
        int []arr3={0,1,1,1,0,1,2,1,2,0,0,0};
        System.out.println("Sorting Brute Force:"+Arrays.toString(OptimalSolution(arr3)));

    }

    public static int[] BruteForce(int [] arr){
        Arrays.sort(arr);
        return arr;
    }

    public static int[] BetterSolution(int[] arr){      //Time-Complexity=O(n+n) Space-Complexity=O(1)
        int [] count=new int[3];
        int addCount=0;
        for(int i=0;i<arr.length;i++){                //O(n)
            count[arr[i]]++;
        }
        for(int i=0;i<count[0];i++){

            arr[addCount++]=0;
        }for(int i=0;i<count[1];i++){                    //O(n)
            arr[addCount++]=1;
        }for(int i=0;i<count[2];i++){
            arr[addCount++]=2;
        }
        return arr;
    }


    //Using Dutch National Flag Technique
    public static int [] OptimalSolution(int [] arr){
        int low=0,mid=0,high=arr.length-1;
        while(mid<=high){
            if(arr[mid]==0){
                swap(arr,mid++,low++);
            }
            else if(arr[mid]==1){
                  mid++;
            }
           else{
                swap(arr,high--,mid);
            }
        }
        return arr;
    }

    static int[] swap(int []arr,int i, int j){
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
        return arr;
    }

}

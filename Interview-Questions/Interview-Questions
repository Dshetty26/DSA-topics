Q1>Can we create multiple main function?
ANS-->yes, we can create multiple main functions with different arguments in it
Class Cars{
public static void main(String[] args){
  }
public static void main(int[] args){
  } 
} 


Q2>Can we write multiple catch function with one try function?
Ans- Yes, we can
try
{
}
catch (Exception exp1)
{
    // Block 1
}
catch (IOException exp2)
{
    // Block 2
}


 Q3>What helps java to write the code once and run anywhre?
-->The Bytecode. Java compiler converts the Java programs into the class file (Byte Code) which is the intermediate
 language between source code and machine code. This bytecode is not platform-specific and can be executed on any computer.


Q4>Can we write java programs without main method? Will it run?
-->Yes, we can execute a java program without a main method by using a static block. 

Static block in Java is a group of statements that gets executed only once when the class is loaded into the memory by 
Java ClassLoader, It is also known as a static initialization block. Static initialization block is going directly into
 the stack memory.

Q4>Can we write java programs without main method? Will it run?
-->Yes, we can execute a java program without a main method by using a static block. 

Static block in Java is a group of statements that gets executed only once when the class is loaded into the memory
 by Java ClassLoader, It is also known as a static initialization block. Static initialization block is going directly 
 into the stack memory.

class StaticInitializationBlock{
   static{
      System.out.println("class without a main method");
      System.exit(0);
   }
}


Q4> Difference between JDK , JVM & JRE?
-->1. JDK
Java Development Kit aka JDK is the core component of Java Environment and provides all the tools, executables, and binaries required to compile, debug, and execute a Java Program. JDK is a platform-specific software and that’s why we have separate installers for Windows, Mac, and Unix systems. We can say that JDK is the superset of JRE since it contains JRE with Java compiler, debugger, and core classes.

2. JVM
JVM is the heart of Java programming language. When we execute a Java program, JVM is responsible for converting the byte code to the machine-specific code. JVM is also platform-dependent and provides core java functions such as memory management, garbage collection, security, etc. JVM is customizable and we can use java options to customize it. For example, allocating minimum and maximum memory to JVM. JVM is called virtual because it provides an interface that does not depend on the underlying operating system and machine hardware. This independence from hardware and the operating system makes java program write-once-run-anywhere.

3. JRE
JRE is the implementation of JVM. It provides a platform to execute java programs. JRE consists of JVM, Java binaries, and other classes to execute any program successfully. JRE doesn’t contain any development tools such as Java compiler, debugger, JShell, etc. If you just want to execute a java program, you can install only JRE. You don’t need JDK because there is no development or compilation of java source code is required. Now that we have a basic understanding of JDK, JVM, and JRE, let’s look into the difference between them.

JDK vs JRE vs JVM
Let’s look at some of the important differences between JDK, JRE, and JVM.

JDK is for development purpose whereas JRE is for running the java programs.
JDK and JRE both contains JVM so that we can run our java program.
JVM is the heart of java programming language and provides platform independence.
Just-in-time Compiler (JIT)
Sometimes you will find JIT alongside JVM, JDK, and JRE in textbooks. JIT is part of the JVM that optimizes the process of converting byte code to machine-specific language. It compiles similar byte codes at the same time and reduces the overall time taken for the compilation of byte code to machine-specific language.


Q5>what is a wrapper class?
A wrapper class is used to convert the primitive datatypes to objects.
As wrapper class is a class it comes with is its own set of methods   Integer.parseInt("10") //string to integer
                  Integer.parseLong("100") //string to long
 Wrapper class values can be changed by directly reinitializing the local variables, but cannot be changed by passing
  the reference variables into a swap  functions as final keyword is used while making the wrapper class


 Q5> What will happen if you dont use static along with main function? Will it run?
--> You can write the main method in your program without the static modifier, the program gets compiled without 
compilation errors. But, at the time of execution JVM does not consider this new method (without static) as 
the entry point of the program.

Q6>What is method overloading 
//1st 
eg>constructor and its types default, parameterized, object passed in a constructor, constructor calling another constructor.
 //2nd 
 eg>Same method name but different paramerters;


Q7> Will the try catch method work if I create two catch methods like
 try{
                int c = (10/0);
//                break;
            }
            catch (Exception e){
                System.out.println("Exception occured");
            }
            catch(ArithmeticException e){
                System.out.println("Arithmetic Exception occured!"); 
            }
            finally{
                System.out.println("End of the program...\n");
            }

--> The code will show error in compile time as the catch method catch(ArithmeticException e) lies below catch(Exception e)


Q8> What is finally block?
-->Java finally block is a block used to execute important code such as closing the connection, etc.

Java finally block is always executed whether an exception is handled or not. Therefore, it contains all the necessary statements that need to be printed regardless of the exception occurs or not.

The finally block follows the try-catch block.



Q9>Difference between Array[] and ArrayList<>?
-->The array is a fixed sized data structure thus, the array always needs to mention the size of the elements. On the other hand, ArrayList is not a fixed sized data structure, thus there is no need to mention the size of the ArrayList especially creating its object.

Difference Between Array and Arraylist
By Simplilearn
Last updated on Feb 21, 202336669
Difference Between Array and Arraylist
Table of Contents
What Is Array in Java?Example of ArrayWhat Is Arraylist in Java?Example of ArraylistDifference Between Array and ArraylistView More
Array and arraylist are well known data structures in Java programming language that are used to store the elements or objects. Arrays are basic functionality whereas Arraylists are collection frameworks in Java. 

Become a Skilled Web Developer in Just 9 Months!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMBecome a Skilled Web Developer in Just 9 Months!
What Is Array in Java?
Arrays in Java are known as dynamically created objects.
Arrays can hold the values of elements in a constant manner. Array cannot change its size once created. Also, the memory location for the array is contiguous. 
To create an array with specific size, we can simply use command "int array[]=new int[size];" 
Array shows  a message "ArrayIndexOutofBoundsException" whenever we add more elements to it after the limit has exceeded.  
Whenever we use Arr(0), it will return the value of element 1. Most users often get confused whether it is for null element or element 1. Thus, users must have a deep understanding of memory storage while returning values in Arrays. 
Example of Array
int arr[]=new int[4]; 

//specified size of array is 4

//adding 5 elements into array 

arr[0]=13;

arr[1]=3;

arr[2]=16;

arr[3]=68;

arr[4]=90;

Output:
13

3

16

68

90

Become a Skilled Web Developer in Just 9 Months!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMBecome a Skilled Web Developer in Just 9 Months!
What Is Arraylist in Java?
Arraylist is not as strong or static as array and is concerned with the collection framework present in java.util package.
It can store similar as well as different data types. Thus, its overall size and quality might vary dynamically.
 Thus, it is dynamic in size. 
In C# collection, an ArrayList is one of the most important features to implement data structures in a simpler and
 easy manner. Also, it is able to implement Ilist Interface which is compatible with arrays.  
Ilist Interface is used to add, delete, insert, view or modify the data types. 
With the help of command "get()", one can easily access elements of ArrayList in Java. 
ArrayList is Java is also equivalent to C++ vector. 
Example of Arraylist
ArrayList Arrlst = new ArrayList ();

Arrlst.Add ("Delhi");

Arrlst.Add ("1");

Arrlst.Add ("null");

Become a Skilled Web Developer in Just 9 Months!
Caltech PGP Full Stack DevelopmentEXPLORE PROGRAMBecome a Skilled Web Developer in Just 9 Months!

Difference Between Array and Arraylist:
Array:
-Length of Array is static that means one cannot change its length that has been already defined by the developer to that particular element. This Array needs to specify the size of the elements.  
-In other words, the length of the elements in the array is    static or  requires more memory to store the elements and less    time to iterate the elements. 
-Array does not allow generics, though multidimensional in nature. 
- Functions such as indexOf() and remove() are not supported by Arrays in Java.
- In the array, giving references to objects or elements  depends upon the type of array such as primitive type or object type.

ArrayList:
- ArrayList uses the size() method to compute the size of the  elements. Also, it is dynamic, which means one can change the size of the arraylist if the elements are modified in it, which means the length of the arraylist is variable. 
-  ArrayList requires more memory to store the elements as well as more time to iterate. 
- ArrayList enables the use of generic and single dimensional in nature. 
- In arrayList, we can convert the primitive int data type into an Integer object with the help of commands such as “arraylist.add(1)” as shown in example. 
- Since primitive data types can be created in ArrayList, the members of ArrayList are always given references to the  objects at every different memory locations . Thus, in ArrayList, the actual objects or elements are never stored at contiguous locations whereas their References can be stored at contiguous locations. 
- In ArrayList, primitive types have actual values with contiguous locations, however object type allocation is similar to ArrayList. 
- Operations such as indexOf(), remove() are supported by ArrayList in Java.


Q10>Example where we can prefer array over arraylist?
-->When we require a multidimensional structure to store the data then we use arrays over lists as lists can
 be one dimensional only. If we require fixed length and static allocation then, arrays are used over lists. 
 When the faster processing of data is required then arrays are used over lists.

RealLife Example of ArrayList:  The Amazon website has many customer's records in its database. 
If they want to retrieve the customers from the database and show it on a web screen. 
In this case, ArrayList will be used to add customer records from ResultSet.

code for- how to create a java code for getting input and how to connect it to 
a sql database https://www.javaprogramto.com/2019/11/java-arraylist-real-time-examples.html#:~:text=For%20Example%2C%20the%20Amazon%20website,add%20customer%20records%20from%20ResultSet.

Example of Arrays="Chess", "X-O", an egg carton



Q11>Why map is not considered as a collection?
-->List, Set and Queue are a collection of similar kind of objects but just values, where as Map is a collection of key
 and value pairs.
--List Set and Queue have add as a function which takes a value as param to add an element whereas Map has put as a
 function which takes a key and a value as params to add a key-value pair.
--List, Set and Queue provide iterate functionality over the value whereas Maps has keys to iterate over which is 
ultimately a Set and Values as Collection.



Q12> what is difference between MySQL and Oracle?
-->MySQL is built to be primarily free and open-source, while Oracle is primarily built to be commercial and paid.
 MySQL is also more customizable than Oracle which is because Oracle is a finished product.
-->Oracle supports operating systems such as Windows, Linux, Solaris, HP-UX, OS X, etc. 
While SQL server supports only windows and Linux operating systems. In Oracle, the users share the database. 
While in SQL server, the users do not share the database.



Q13>Describe about final keyword:
--> final with variable-->we use final keyword with variable if we want to keep the value of the variable same 
throughout the class or function it is declared.
 
--if final is declared to an instance variable i.e. variable declared inside a class then its value will remain
 the same throughout the class 
--if final is declared to a local variable i.e. variable declared inside a function, its value cannot be changed
 throughout the function


final with method:
When we use final keyword with a function, we cannot override the function i.e we cannot create a function 
of the same name in another extended class

final with Class:
When we declare final keyword with class, the class cannot be inherited





Q14> What is method Overriding?
-->Method overriding is the function of creating methods with same name and same parameters in parent class
 and its child class...

Conditions for Method Overriding:
1>Method ka naam same ho
2>Dono methods different classes mein ho
3>Dono methods k arguments bhi ho
                          -no of parameters
                          -type of parameter
                          -sequence of parameter
4>Inheritance is must (IS-A relationship)




Q14>Google question - Threading parallelization collection framework





Strings-->Primitive 
String a="101";
int a= Integer.parseInt(a);
String b="143.22";
double b=Double.parseDouble(b);

boxing[ placing primitive values into Wrapper objects using Integer.valueOf(), Float.valueOf()   ] { primitive->objects}

auto-boxing [automatically boxed- int a=10, Integer num1=a;    automatically boxed] { primitive->objects }

unboxing [ Integer result=100; int newResult=result.intValue(); {object to primitive}

auto-unboxing [ Integer marks=78; int newMarks=marks; ] {object-->primitive}



Q15> Why wrapper class variables does not change values when passed to a swap function?
--> because final keyword is used.



Q16> What are the differnt types of errors?
--> Compile Time Error(Syntax errors)
These errors occur when we violate the rules present in a syntax. The compile-time error indicates something that we need to fix before compiling the code. A compiler can easily detect these errors.

-->Runtime Error:
A runtime error is a problem that happens during the execution of a program. In other words, it can be defined as it is an error that occurs at the time of launching the software.

Types of Runtime Error:
-Logic Error
-Memory Leak
-Division by Zero Error
-Undefined Object Error
-Input/Output Device Error
-Encoding Error



Q17> What is difference between ArrayList and HashSet?
--> 1. IMPLEMENTATION : ArrayList implements List interface while HashSet implements Set interface in Java.
2.INTERNAL IMPLEMENTATION: ArrayList is backed by an Array while HashSet is backed by an HashMap.
3.DUPLICATES : ArrayList allows duplicate values while HashSet doesn’t allow duplicates values.
4.CONSTRUCTOR : ArrayList have three constructor which are ArrayList(), ArrayList(int capacity) ArrayList(int Collection c) while HashSet have four constructor which are HashSet(), HashSet(int capacity), HashSet(Collection c) and HashSet(int capacity, float loadFactor)
5.ORDERING : ArrayList maintains the order of the object in which they are inserted while HashSet is an unordered collection and doesn’t maintain any order.
6.INDEXING : ArrayList is index based we can retrieve object by calling get(index) method or remove objects by calling remove(index) method while HashSet is completely object based. HashSet also does not provide get() method.
7.NULL OBJECT: ArrayList not apply any restriction, we can add any number of null value while HashSet allow one null value.
      9. Basic Operation’s Time complexity :-  

          9.1 ArrayList common operation’s time complexity

         add() – takes O(1) time; 
         get() – it takes constant time O(1);
         remove() –it takes linear time complexity O(n) . It iterate the entire array to find the element qualifying for removal.
        contains() – It also take linear time complexity O(n).

         9.2 Set common operation’s time complexity

         For HashSet, the add(), remove() and contains() operations cost constant O(1) time thanks to the internal HashMap implementation.

Syntax: ArrayList:-
ArrayList list=new ArrayList();
HashSet:-
HashSet set=new HashSet();






Q18> What is the difference between delete drop and truncate in sql?
--> The DELETE command deletes one or more existing records from the table in the database. 
    The DROP Command drops the complete table from the database. 
    The TRUNCATE Command deletes all the rows from the existing table, leaving the row with the column names.
 
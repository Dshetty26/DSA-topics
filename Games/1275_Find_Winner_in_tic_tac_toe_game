class Solution {
    public String tictactoe(int[][] moves) {
         return SearchWinner(moves);
        }

    String SearchWinner(int[][] moves){
        char Player='A';
        char [][] matrix=new char[3][3];
        for(int i=0;i<matrix.length;i++){
            for(int j=0;j<matrix[i].length;j++){
                matrix[i][j]=' ';
            }
        }
         
        int count=0;
        while(count<moves.length &count<9){
            int row=moves[count][0];
            int column=moves[count][1];
            matrix[row][column]=Player;
             for(int i=0;i<matrix.length;i++){
               if((matrix[i][0]==Player&&matrix[i][0]==matrix[i][1]&&matrix[i][1]==matrix[i][2])||(matrix[0][i]==Player&&matrix[0][i]==matrix[1][i] && matrix[1][i]==matrix[2][i])||(matrix[0][0]==Player&&matrix[0][0]==matrix[1][1]&& matrix[1][1]==matrix[2][2])||(matrix[0][2]==Player&&matrix[0][2]==matrix[1][1]&& matrix[1][1]==matrix[2][0])){
                 return Character.toString(Player);  
               }
            }
             Player=(Player=='A')?'B':'A';
             count++;
        }
        
       if(count==9) return "Draw";
       else return "Pending";
    }

}